'/public/accounts/{accountId}/projects/{projectId}/network/allow_lists':
  post:
    description: Create an allow list
    operationId: createNetworkAllowList
    summary: Create an allow list entity
    tags:
      - network
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: projectId
        in: path
        description: ID of the associated project
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    requestBody:
      $ref: '../request_bodies/_index.yaml#/NetworkAllowListSpec'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/NetworkAllowListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  get:
    description: Get list of allow lists
    operationId: listNetworkAllowLists
    summary: Get list of allow list entities
    tags:
      - network
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: projectId
        in: path
        description: ID of the associated project
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        $ref: '../responses/_index.yaml#/NetworkAllowListListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/public/accounts/{accountId}/projects/{projectId}/network/allow_lists/{allowListId}':
  get:
    description: Retrieve an allow list
    operationId: getNetworkAllowList
    summary: Retrieve an allow list entity
    tags:
      - network
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: projectId
        in: path
        description: ID of the associated project
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: allowListId
        in: path
        description: ID of the allow list entity
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        $ref: '../responses/_index.yaml#/NetworkAllowListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  delete:
    description: Delete an allow list
    operationId: deleteNetworkAllowList
    summary: Delete an allow list entity
    tags:
      - network
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: projectId
        in: path
        description: ID of the associated project
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: allowListId
        in: path
        description: ID of the allow list entity
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: Allow list successfully deleted
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/public/accounts/{accountId}/projects/{projectId}/network/vpcs/{vpcId}':
  parameters:
    - name: accountId
      in: path
      description: ID of the associated account
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: projectId
      in: path
      description: ID of the associated project
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: vpcId
      in: path
      description: ID of the VPC
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  get:
    description: Get customer VPC
    tags:
      - network
    summary: Get customer-facing VPC by ID
    operationId: getSingleTenantVpc
    responses:
      '200':
        $ref: '../responses/_index.yaml#/SingleTenantVpcResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  delete:
    description: Delete customer VPC
    tags:
      - network
    summary: Delete customer-facing VPC by ID
    operationId: deleteVpc
    responses:
      '200':
        description: Successfully submitted delete vpc request
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/public/accounts/{accountId}/projects/{projectId}/network/vpc-peerings':
  post:
    description: Create a peering
    tags:
      - network
    summary: Create a peering between customer VPC and Yugabyte VPC
    operationId: createVpcPeering
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: projectId
        in: path
        description: ID of the associated project
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    requestBody:
      $ref: '../request_bodies/_index.yaml#/VpcPeeringRequest'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/VpcPeeringResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  get:
    description: List peerings
    tags:
      - network
    summary: List peerings between customer VPCs and Yugabyte VPCs
    operationId: listVpcPeerings
    parameters:
      - name: accountId
        in: path
        description: ID of the associated account
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: projectId
        in: path
        description: ID of the associated project
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: vpc_id
        in: query
        description: Filter results by VPC ID
        required: false
        style: form
        explode: false
        schema:
          type: string
          format: uuid
      - name: order
        in: query
        description: Order of results
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: asc
      - name: order_by
        in: query
        description: Sort results by attribute
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: name
      - name: limit
        in: query
        description: Limit number of results returned per page
        required: false
        style: form
        explode: false
        schema:
          type: integer
          default: 25
          minimum: 1
          maximum: 100
      - name: continuation_token
        in: query
        description: Boundary before next page
        required: false
        style: form
        explode: false
        schema:
          type: string
    responses:
      '200':
        $ref: '../responses/_index.yaml#/VpcPeeringListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/public/accounts/{accountId}/projects/{projectId}/network/vpc-peerings/{peeringId}':
  parameters:
    - name: accountId
      in: path
      description: ID of the associated account
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: projectId
      in: path
      description: ID of the associated project
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: peeringId
      in: path
      description: ID of the peering
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  get:
    description: Get a VPC Peering
    tags:
      - network
    summary: Get a VPC Peering
    operationId: getVpcPeering
    responses:
      '200':
        $ref: '../responses/_index.yaml#/VpcPeeringResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  delete:
    description: Delete VPC Peering
    tags:
      - network
    summary: Delete VPC Peering
    operationId: deleteVpcPeering
    responses:
      '200':
        description: Successfully submitted delete peering request
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/public/accounts/{accountId}/projects/{projectId}/network/vpcs':
  parameters:
    - name: accountId
      in: path
      description: ID of the associated account
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
    - name: projectId
      in: path
      description: ID of the associated project
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  post:
    description: Create a dedicated VPC
    tags:
      - network
    summary: Create a dedicated VPC for your DB clusters
    operationId: createVpc
    requestBody:
      $ref: '../request_bodies/_index.yaml#/SingleTenantVpcRequest'
    responses:
      '200':
        $ref: '../responses/_index.yaml#/SingleTenantVpcResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
  get:
    description: List customer VPCs
    tags:
      - network
    summary: Get customer-facing VPCs to choose for cluster isolation
    operationId: listSingleTenantVpcs
    parameters:
      - name: order
        in: query
        description: Order of results
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: asc
      - name: order_by
        in: query
        description: Sort results by attribute
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: name
      - name: limit
        in: query
        description: Limit number of results returned per page
        required: false
        style: form
        explode: false
        schema:
          type: integer
          default: 25
          minimum: 1
          maximum: 100
      - name: continuation_token
        in: query
        description: Boundary before next page
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: name
        in: query
        description: Filter results by name
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: cloud
        in: query
        description: Filter results by cloud
        required: false
        style: form
        explode: false
        schema:
          type: string
          enum: ["AWS", "GCP"]
      - name: region
        in: query
        description: Filter results by region
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: ids
        in: query
        description: Filter VPCs by Id
        style: form
        explode: false
        schema:
          type: array
          uniqueItems: true
          items:
            type: string
            format: uuid
    responses:
      '200':
        $ref: '../responses/_index.yaml#/SingleTenantVpcListResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
'/private/network/{vpcId}':
  get:
    description: Get network info by ID
    tags:
      - internal-network
    summary: Get network info by ID
    operationId: getVpc
    parameters:
      - name: vpcId
        in: path
        description: ID of platform to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
    responses:
      '200':
        $ref: '../responses/_index.yaml#/NetworkResponse'
      '400':
        $ref: '../responses/_index.yaml#/ApiError'
      '500':
        $ref: '../responses/_index.yaml#/ApiError'
