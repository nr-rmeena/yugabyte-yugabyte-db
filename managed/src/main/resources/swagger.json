{
  "swagger": "2.0",
  "info": {
    "description": "ALPHA - NOT FOR EXTERNAL USE",
    "version": "v1",
    "title": "Yugabyte Platform APIs",
    "termsOfService": "TODO(chirag)",
    "contact": {
      "name": "https://docs.yugabyte.com"
    },
    "license": {
      "name": "Polyform Free Trial License 1.0.0",
      "url": "https://github.com/yugabyte/yugabyte-db/blob/master/licenses/POLYFORM-FREE-TRIAL-LICENSE-1.0.0.txt"
    }
  },
  "host": "localhost",
  "basePath": "/",
  "tags": [
    {
      "name": "Provider"
    },
    {
      "name": "Region"
    },
    {
      "name": "Universe"
    }
  ],
  "paths": {
    "/api/v1/customers/{cUUID}/providers/{pUUID}/regions/{rUUID}/zones/{azUUID}": {
      "delete": {
        "summary": "deleteAZ",
        "description": "",
        "operationId": "delete",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "pUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "rUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "azUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/providers/{pUUID}/regions/{rUUID}/zones": {
      "get": {
        "summary": "listAZ",
        "description": "",
        "operationId": "list",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "pUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "rUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AvailabilityZone"
              }
            }
          }
        }
      },
      "post": {
        "summary": "createAZ",
        "description": "",
        "operationId": "create",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "pUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "rUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "azFormData",
            "description": "az form data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AvailabilityZoneFormData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/AvailabilityZone"
              }
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/providers/{pUUID}": {
      "delete": {
        "tags": [
          "Provider"
        ],
        "summary": "deleteProvider",
        "description": "",
        "operationId": "delete",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "pUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/providers": {
      "get": {
        "tags": [
          "Provider"
        ],
        "summary": "listProvider",
        "description": "",
        "operationId": "list",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Provider"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Provider"
        ],
        "summary": "createProvider",
        "description": "",
        "operationId": "create",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "providerFormData",
            "description": "provider form data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloudProviderFormData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Provider"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/providers/{pUUID}/initialize": {
      "get": {
        "tags": [
          "Provider"
        ],
        "operationId": "initialize",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "pUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/providers/{pUUID}/cleanup": {
      "post": {
        "tags": [
          "Provider"
        ],
        "operationId": "cleanup",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "pUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/providers/{pUUID}/bootstrap": {
      "post": {
        "tags": [
          "Provider"
        ],
        "summary": "bootstrap",
        "description": "",
        "operationId": "bootstrap",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "pUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "bootstrap params",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloudBootstrapParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/YWTask"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/providers/{pUUID}/edit": {
      "put": {
        "tags": [
          "Provider"
        ],
        "summary": "editProvider",
        "description": "",
        "operationId": "edit",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "pUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "editProviderFormData",
            "description": "edit provider form data",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Provider"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/providers/kubernetes": {
      "post": {
        "tags": [
          "Provider"
        ],
        "operationId": "createKubernetes",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/providers/setup_docker": {
      "post": {
        "tags": [
          "Provider"
        ],
        "operationId": "setupDocker",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}": {
      "get": {
        "summary": "getCustomer",
        "description": "",
        "operationId": "index",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        }
      },
      "put": {
        "operationId": "update",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "summary": "deleteCustomer",
        "description": "",
        "operationId": "delete",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/v1/customers": {
      "get": {
        "operationId": "list",
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/metrics": {
      "post": {
        "operationId": "metrics",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/features": {
      "put": {
        "operationId": "upsertFeatures",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/host_info": {
      "get": {
        "operationId": "getHostInfo",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/universes/import": {
      "post": {
        "summary": "import",
        "description": "",
        "operationId": "importUniverse",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/providers/{pUUID}/regions/{rUUID}": {
      "delete": {
        "tags": [
          "Region"
        ],
        "summary": "delete",
        "description": "",
        "operationId": "delete",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "pUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "rUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/providers/{pUUID}/regions": {
      "get": {
        "tags": [
          "Region"
        ],
        "summary": "list Regions for a specific provider",
        "description": "",
        "operationId": "list",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "pUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Region"
              }
            }
          },
          "500": {
            "description": "If there was a server or database issue when listing the regions",
            "schema": {
              "$ref": "#/definitions/Generic error response from Yugawware Platform API"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Region"
        ],
        "summary": "create new region",
        "description": "",
        "operationId": "create",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "pUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "region",
            "description": "region form data for new region to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegionFormData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Region"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/regions": {
      "get": {
        "tags": [
          "Region"
        ],
        "summary": "list all Regions across all providers",
        "description": "",
        "operationId": "listAllRegions",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Region"
              }
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/certificates/{name}": {
      "get": {
        "operationId": "get",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/certificates/{rUUID}": {
      "post": {
        "summary": "TODO",
        "description": "",
        "operationId": "getClientCert",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "rUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "operationId": "delete",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "rUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/certificates": {
      "get": {
        "operationId": "list",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "post": {
        "summary": "upload",
        "description": "",
        "operationId": "upload",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/certificates/{rUUID}/download": {
      "get": {
        "operationId": "getRootCert",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "rUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/certificates/{rUUID}/update_empty_cert": {
      "post": {
        "summary": "update empty certs",
        "description": "",
        "operationId": "updateEmptyCustomCert",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "rUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CertificateInfo"
            }
          }
        }
      }
    },
    "/api/v1/register": {
      "post": {
        "operationId": "register",
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/universes/{uniUUID}/proxy/{proxyUrl}": {
      "get": {
        "operationId": "proxyRequest",
        "parameters": [
          {
            "name": "uniUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "proxyUrl",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/api/v1/logout": {
      "get": {
        "operationId": "logout",
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/api/v1/login": {
      "post": {
        "summary": "login",
        "description": "",
        "operationId": "login",
        "parameters": [
          {
            "in": "body",
            "name": "loginFormData",
            "description": "login form data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerLoginFormData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/v1/insecure_login": {
      "get": {
        "summary": "insecureLogin",
        "description": "",
        "operationId": "insecure_login",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/v1/platform_config": {
      "get": {
        "operationId": "getPlatformConfig",
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/api/v1/third_party_login": {
      "get": {
        "operationId": "thirdPartyLogin",
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/security": {
      "put": {
        "operationId": "set_security",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/api_token": {
      "put": {
        "summary": "apiToken",
        "description": "",
        "operationId": "api_token",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/v1/customer_count": {
      "get": {
        "operationId": "customerCount",
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/api/v1/app_version": {
      "get": {
        "operationId": "appVersion",
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/api/v1/logs/{maxLines}": {
      "get": {
        "operationId": "getLogs",
        "parameters": [
          {
            "name": "maxLines",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/api/v1/ui_theme": {
      "get": {
        "operationId": "getUITheme",
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}": {
      "get": {
        "tags": [
          "Universe"
        ],
        "summary": "getUniverse",
        "description": "",
        "operationId": "index",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "uniUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UniverseResp"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Universe"
        ],
        "summary": "updateUniverse",
        "description": "",
        "operationId": "update",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "uniUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "univ_def",
            "description": "univ definition",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UniverseDefinitionTaskParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UniverseResp"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Universe"
        ],
        "summary": "Destroy the universe",
        "description": "",
        "operationId": "destroy",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "uniUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "isForceDelete",
            "in": "query",
            "description": "isForceDelete",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/universes": {
      "get": {
        "tags": [
          "Universe"
        ],
        "summary": "List Universes",
        "description": "",
        "operationId": "list",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UniverseResp"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Universe"
        ],
        "summary": "Create a YugaByte Universe",
        "description": "",
        "operationId": "create",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "univ_def",
            "description": "univ definition",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UniverseDefinitionTaskParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UniverseResp"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/resume": {
      "post": {
        "tags": [
          "Universe"
        ],
        "summary": "Resume the universe",
        "description": "",
        "operationId": "resume",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "uniUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/universe_configure": {
      "post": {
        "tags": [
          "Universe"
        ],
        "summary": "configure the universe parameters",
        "description": "This API builds the new universe definition task parameters by merging the input UserIntent with the current taskParams and returns the resulting task parameters in a serialized form",
        "operationId": "configure",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UniverseDefinitionTaskParams"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/universes/find/{universeName}": {
      "get": {
        "tags": [
          "Universe"
        ],
        "operationId": "findByName",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "universeName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/upgrade": {
      "post": {
        "tags": [
          "Universe"
        ],
        "summary": "Upgrade  the universe",
        "description": "",
        "operationId": "upgrade",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "uniUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "upgrade_params",
            "description": "upgrade params",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpgradeParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/setup_universe_2dc": {
      "put": {
        "tags": [
          "Universe"
        ],
        "summary": "resetVersion",
        "description": "",
        "operationId": "resetVersion",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "uniUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/YWSuccess"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/set_key": {
      "post": {
        "tags": [
          "Universe"
        ],
        "summary": "setUniverse",
        "description": "",
        "operationId": "setUniverseKey",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "uniUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UniverseResp"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/universe_resources": {
      "post": {
        "tags": [
          "Universe"
        ],
        "summary": "Api to get the resource estimate for a universe",
        "description": "Expects UniverseDefinitionTaskParams in request body and calculates the resource estimate for NodeDetailsSet in that.",
        "operationId": "getUniverseResources",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UniverseResourceDetails"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/pause": {
      "post": {
        "tags": [
          "Universe"
        ],
        "summary": "Pause the universe",
        "description": "",
        "operationId": "pause",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "uniUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/cost": {
      "get": {
        "tags": [
          "Universe"
        ],
        "summary": "universeCost",
        "description": "",
        "operationId": "universeCost",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "uniUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UniverseResourceDetails"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/leader": {
      "get": {
        "tags": [
          "Universe"
        ],
        "summary": "getMasterLeaderIP",
        "description": "",
        "operationId": "getMasterLeaderIP",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "uniUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/disk_update": {
      "post": {
        "tags": [
          "Universe"
        ],
        "summary": "updateDiskSize",
        "description": "",
        "operationId": "updateDiskSize",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "uniUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/status": {
      "get": {
        "tags": [
          "Universe"
        ],
        "summary": "Status of the Universe",
        "description": "",
        "operationId": "status1",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "uniUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/health_check": {
      "get": {
        "tags": [
          "Universe"
        ],
        "summary": "health Check",
        "description": "",
        "operationId": "healthCheck",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "uniUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/cost": {
      "get": {
        "tags": [
          "Universe"
        ],
        "summary": "list universe cost for all universes",
        "description": "",
        "operationId": "universeListCost",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UniverseResourceDetails"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/update_backup_state": {
      "put": {
        "tags": [
          "Universe"
        ],
        "summary": "Set backup Flag for a universe",
        "description": "",
        "operationId": "setBackupFlag",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "uniUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/YWSuccess"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/config_alerts": {
      "post": {
        "tags": [
          "Universe"
        ],
        "summary": "Configure Alerts for a universe",
        "description": "",
        "operationId": "configureAlerts",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "uniUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/YWSuccess"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/run_query": {
      "post": {
        "tags": [
          "Universe"
        ],
        "summary": "Run YSQL query against this universe",
        "description": "Only valid when platform is running in mode is `OSS`",
        "operationId": "runQuery",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "uniUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/run_in_shell": {
      "post": {
        "tags": [
          "Universe"
        ],
        "summary": "run command in shell",
        "description": "This operation is no longer supported sue to security reasons",
        "operationId": "runInShell",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "uniUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Generic error response from Yugawware Platform API"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/update_db_credentials": {
      "post": {
        "tags": [
          "Universe"
        ],
        "summary": "setDatabaseCredentials",
        "description": "",
        "operationId": "setDatabaseCredentials",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "uniUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/YWSuccess"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/create_db_credentials": {
      "post": {
        "tags": [
          "Universe"
        ],
        "summary": "createUserInDB",
        "description": "",
        "operationId": "createUserInDB",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "uniUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/YWSuccess"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/mark_helm3_compatible": {
      "put": {
        "tags": [
          "Universe"
        ],
        "summary": "Set the universe as helm3 compatible",
        "description": "",
        "operationId": "setHelm3Compatible",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "uniUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/YWSuccess"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/live_queries": {
      "get": {
        "tags": [
          "Universe"
        ],
        "summary": "getLiveQueries",
        "description": "",
        "operationId": "getLiveQueries",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "uniUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/slow_queries": {
      "get": {
        "tags": [
          "Universe"
        ],
        "summary": "getSlowQueries",
        "description": "",
        "operationId": "getSlowQueries",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "uniUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Universe"
        ],
        "operationId": "resetSlowQueries",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "uniUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/{nodeName}/download_logs": {
      "get": {
        "tags": [
          "Universe"
        ],
        "operationId": "downloadNodeLogs",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "uniUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "nodeName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/cluster": {
      "post": {
        "tags": [
          "Universe"
        ],
        "summary": "clusterCreate",
        "description": "",
        "operationId": "clusterCreate",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "uniUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "univ_def",
            "description": "univ definition",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UniverseDefinitionTaskParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UniverseResp"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/cluster/{clustUUID}": {
      "delete": {
        "tags": [
          "Universe"
        ],
        "summary": "clusterDelete",
        "description": "",
        "operationId": "clusterDelete",
        "parameters": [
          {
            "name": "cUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "uniUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "clustUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UniverseResp"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AvailabilityZone": {
      "type": "object",
      "required": [
        "active",
        "code",
        "kubeconfigPath",
        "name",
        "provider",
        "region",
        "subnet",
        "uuid"
      ],
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid"
        },
        "code": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "region": {
          "$ref": "#/definitions/Region"
        },
        "active": {
          "type": "boolean"
        },
        "subnet": {
          "type": "string"
        },
        "provider": {
          "$ref": "#/definitions/Provider"
        },
        "kubeconfigPath": {
          "type": "string"
        }
      }
    },
    "CloudBootstrapParams": {
      "type": "object",
      "required": [
        "airGapInstall",
        "customHostCidrs",
        "destVpcId",
        "errorString",
        "hostVpcId",
        "hostVpcRegion",
        "keyPairName",
        "perRegionMetadata",
        "providerUUID",
        "sshPort",
        "sshPrivateKeyContent",
        "sshUser"
      ],
      "properties": {
        "errorString": {
          "type": "string"
        },
        "providerUUID": {
          "type": "string",
          "format": "uuid"
        },
        "perRegionMetadata": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/PerRegionMetadata"
          }
        },
        "keyPairName": {
          "type": "string"
        },
        "sshPrivateKeyContent": {
          "type": "string"
        },
        "sshUser": {
          "type": "string"
        },
        "airGapInstall": {
          "type": "boolean"
        },
        "sshPort": {
          "type": "integer",
          "format": "int32"
        },
        "hostVpcId": {
          "type": "string"
        },
        "hostVpcRegion": {
          "type": "string"
        },
        "customHostCidrs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "destVpcId": {
          "type": "string"
        }
      }
    },
    "JsonNode": {
      "type": "object",
      "required": [
        "array",
        "bigDecimal",
        "bigInteger",
        "binary",
        "boolean",
        "containerNode",
        "double",
        "float",
        "floatingPointNumber",
        "int",
        "integralNumber",
        "long",
        "missingNode",
        "nodeType",
        "null",
        "number",
        "object",
        "pojo",
        "short",
        "textual",
        "valueNode"
      ],
      "properties": {
        "float": {
          "type": "boolean"
        },
        "array": {
          "type": "boolean"
        },
        "null": {
          "type": "boolean"
        },
        "nodeType": {
          "type": "string",
          "enum": [
            "ARRAY",
            "BINARY",
            "BOOLEAN",
            "MISSING",
            "NULL",
            "NUMBER",
            "OBJECT",
            "POJO",
            "STRING"
          ]
        },
        "object": {
          "type": "boolean"
        },
        "valueNode": {
          "type": "boolean"
        },
        "containerNode": {
          "type": "boolean"
        },
        "missingNode": {
          "type": "boolean"
        },
        "pojo": {
          "type": "boolean"
        },
        "number": {
          "type": "boolean"
        },
        "integralNumber": {
          "type": "boolean"
        },
        "floatingPointNumber": {
          "type": "boolean"
        },
        "short": {
          "type": "boolean"
        },
        "int": {
          "type": "boolean"
        },
        "long": {
          "type": "boolean"
        },
        "double": {
          "type": "boolean"
        },
        "bigDecimal": {
          "type": "boolean"
        },
        "bigInteger": {
          "type": "boolean"
        },
        "textual": {
          "type": "boolean"
        },
        "boolean": {
          "type": "boolean"
        },
        "binary": {
          "type": "boolean"
        }
      }
    },
    "PerRegionMetadata": {
      "type": "object",
      "required": [
        "azToSubnetIds",
        "customImageId",
        "customSecurityGroupId",
        "subnetId",
        "vpcCidr",
        "vpcId"
      ],
      "properties": {
        "vpcId": {
          "type": "string"
        },
        "vpcCidr": {
          "type": "string"
        },
        "azToSubnetIds": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "subnetId": {
          "type": "string"
        },
        "customImageId": {
          "type": "string"
        },
        "customSecurityGroupId": {
          "type": "string"
        }
      }
    },
    "Provider": {
      "type": "object",
      "required": [
        "active",
        "cloudParams",
        "code",
        "customerUUID",
        "hostedZoneId",
        "hostedZoneName",
        "name",
        "regions",
        "uuid"
      ],
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid"
        },
        "code": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "customerUUID": {
          "type": "string",
          "format": "uuid"
        },
        "regions": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Region"
          }
        },
        "hostedZoneName": {
          "type": "string"
        },
        "hostedZoneId": {
          "type": "string"
        },
        "cloudParams": {
          "$ref": "#/definitions/CloudBootstrapParams"
        },
        "config": {
          "type": "object",
          "readOnly": true,
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Region": {
      "type": "object",
      "required": [
        "active",
        "code",
        "details",
        "latitude",
        "longitude",
        "name",
        "provider",
        "securityGroupId",
        "uuid",
        "vnetName",
        "ybImage",
        "zones"
      ],
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid"
        },
        "code": {
          "type": "string",
          "example": "us-west-2",
          "description": "Cloud provider region code"
        },
        "name": {
          "type": "string"
        },
        "ybImage": {
          "type": "string"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "provider": {
          "$ref": "#/definitions/Provider"
        },
        "zones": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AvailabilityZone"
          }
        },
        "active": {
          "type": "boolean"
        },
        "details": {
          "$ref": "#/definitions/JsonNode"
        },
        "securityGroupId": {
          "type": "string"
        },
        "vnetName": {
          "type": "string"
        },
        "config": {
          "type": "object",
          "readOnly": true,
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "Region within a given provider. Typically this will map to a single cloud provider region"
    },
    "AvailabilityZoneData": {
      "type": "object",
      "required": [
        "code",
        "name",
        "subnet"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "subnet": {
          "type": "string"
        }
      }
    },
    "AvailabilityZoneFormData": {
      "type": "object",
      "required": [
        "availabilityZones"
      ],
      "properties": {
        "availabilityZones": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailabilityZoneData"
          }
        }
      }
    },
    "CloudProviderFormData": {
      "type": "object",
      "required": [
        "active",
        "code",
        "config",
        "name",
        "region"
      ],
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "unknown",
            "aws",
            "gcp",
            "azu",
            "docker",
            "onprem",
            "kubernetes",
            "local",
            "other"
          ]
        },
        "name": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "config": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "region": {
          "type": "string"
        }
      }
    },
    "YWTask": {
      "type": "object",
      "required": [
        "taskUUID"
      ],
      "properties": {
        "taskUUID": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "Customer": {
      "type": "object",
      "required": [
        "code",
        "creationDate",
        "customerId",
        "features",
        "name",
        "universeUUIDs",
        "uuid"
      ],
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid"
        },
        "code": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "features": {
          "$ref": "#/definitions/JsonNode"
        },
        "universeUUIDs": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "customerId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RegionFormData": {
      "type": "object",
      "required": [
        "code",
        "destVpcId",
        "hostVpcId",
        "hostVpcRegion",
        "latitude",
        "longitude",
        "name",
        "ybImage"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "ybImage": {
          "type": "string"
        },
        "hostVpcRegion": {
          "type": "string"
        },
        "hostVpcId": {
          "type": "string"
        },
        "destVpcId": {
          "type": "string"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "Generic error response from Yugawware Platform API": {
      "type": "object",
      "required": [
        "success"
      ],
      "properties": {
        "success": {
          "type": "boolean"
        },
        "error": {
          "type": "string",
          "example": "There was a problem creating universe",
          "description": "User visible unstructurred error message"
        }
      }
    },
    "ArrayNode": {
      "type": "object",
      "required": [
        "array",
        "bigDecimal",
        "bigInteger",
        "binary",
        "boolean",
        "containerNode",
        "double",
        "float",
        "floatingPointNumber",
        "int",
        "integralNumber",
        "long",
        "missingNode",
        "nodeType",
        "null",
        "number",
        "object",
        "pojo",
        "short",
        "textual",
        "valueNode"
      ],
      "properties": {
        "array": {
          "type": "boolean"
        },
        "nodeType": {
          "type": "string",
          "enum": [
            "ARRAY",
            "BINARY",
            "BOOLEAN",
            "MISSING",
            "NULL",
            "NUMBER",
            "OBJECT",
            "POJO",
            "STRING"
          ]
        },
        "float": {
          "type": "boolean"
        },
        "null": {
          "type": "boolean"
        },
        "object": {
          "type": "boolean"
        },
        "valueNode": {
          "type": "boolean"
        },
        "containerNode": {
          "type": "boolean"
        },
        "missingNode": {
          "type": "boolean"
        },
        "pojo": {
          "type": "boolean"
        },
        "number": {
          "type": "boolean"
        },
        "integralNumber": {
          "type": "boolean"
        },
        "floatingPointNumber": {
          "type": "boolean"
        },
        "short": {
          "type": "boolean"
        },
        "int": {
          "type": "boolean"
        },
        "long": {
          "type": "boolean"
        },
        "double": {
          "type": "boolean"
        },
        "bigDecimal": {
          "type": "boolean"
        },
        "bigInteger": {
          "type": "boolean"
        },
        "textual": {
          "type": "boolean"
        },
        "boolean": {
          "type": "boolean"
        },
        "binary": {
          "type": "boolean"
        }
      }
    },
    "CertificateInfo": {
      "type": "object",
      "required": [
        "certType",
        "certificate",
        "checksum",
        "customCertInfo",
        "customerUUID",
        "expiryDate",
        "inUse",
        "label",
        "privateKey",
        "startDate",
        "universeDetails",
        "uuid"
      ],
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid"
        },
        "customerUUID": {
          "type": "string",
          "format": "uuid"
        },
        "label": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "expiryDate": {
          "type": "string",
          "format": "date-time"
        },
        "privateKey": {
          "type": "string"
        },
        "certificate": {
          "type": "string"
        },
        "certType": {
          "type": "string",
          "enum": [
            "SelfSigned",
            "CustomCertHostPath"
          ]
        },
        "checksum": {
          "type": "string"
        },
        "customCertInfo": {
          "$ref": "#/definitions/CustomCertInfo"
        },
        "universeDetails": {
          "$ref": "#/definitions/ArrayNode"
        },
        "inUse": {
          "type": "boolean"
        }
      }
    },
    "CustomCertInfo": {
      "type": "object",
      "required": [
        "clientCertPath",
        "clientKeyPath",
        "nodeCertPath",
        "nodeKeyPath",
        "rootCertPath"
      ],
      "properties": {
        "nodeCertPath": {
          "type": "string"
        },
        "nodeKeyPath": {
          "type": "string"
        },
        "rootCertPath": {
          "type": "string"
        },
        "clientCertPath": {
          "type": "string"
        },
        "clientKeyPath": {
          "type": "string"
        }
      }
    },
    "CustomerLoginFormData": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "CloudSpecificInfo": {
      "type": "object",
      "required": [
        "assignPublicIP",
        "az",
        "cloud",
        "instance_type",
        "mount_roots",
        "private_dns",
        "private_ip",
        "public_dns",
        "public_ip",
        "region",
        "subnet_id",
        "useTimeSync"
      ],
      "properties": {
        "private_ip": {
          "type": "string"
        },
        "public_ip": {
          "type": "string"
        },
        "public_dns": {
          "type": "string"
        },
        "private_dns": {
          "type": "string"
        },
        "instance_type": {
          "type": "string"
        },
        "subnet_id": {
          "type": "string"
        },
        "az": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "cloud": {
          "type": "string"
        },
        "assignPublicIP": {
          "type": "boolean"
        },
        "useTimeSync": {
          "type": "boolean"
        },
        "mount_roots": {
          "type": "string"
        }
      }
    },
    "Cluster": {
      "type": "object",
      "required": [
        "clusterType",
        "index",
        "placementInfo",
        "userIntent",
        "uuid"
      ],
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid"
        },
        "clusterType": {
          "type": "string",
          "enum": [
            "PRIMARY",
            "ASYNC"
          ]
        },
        "userIntent": {
          "$ref": "#/definitions/UserIntent"
        },
        "placementInfo": {
          "$ref": "#/definitions/PlacementInfo"
        },
        "index": {
          "type": "integer",
          "format": "int32"
        },
        "regions": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Region"
          }
        }
      }
    },
    "CommunicationPorts": {
      "type": "object",
      "required": [
        "masterHttpPort",
        "masterRpcPort",
        "nodeExporterPort",
        "redisServerHttpPort",
        "redisServerRpcPort",
        "tserverHttpPort",
        "tserverRpcPort",
        "yqlServerHttpPort",
        "yqlServerRpcPort",
        "ysqlServerHttpPort",
        "ysqlServerRpcPort"
      ],
      "properties": {
        "masterHttpPort": {
          "type": "integer",
          "format": "int32"
        },
        "masterRpcPort": {
          "type": "integer",
          "format": "int32"
        },
        "tserverHttpPort": {
          "type": "integer",
          "format": "int32"
        },
        "tserverRpcPort": {
          "type": "integer",
          "format": "int32"
        },
        "redisServerHttpPort": {
          "type": "integer",
          "format": "int32"
        },
        "redisServerRpcPort": {
          "type": "integer",
          "format": "int32"
        },
        "yqlServerHttpPort": {
          "type": "integer",
          "format": "int32"
        },
        "yqlServerRpcPort": {
          "type": "integer",
          "format": "int32"
        },
        "ysqlServerHttpPort": {
          "type": "integer",
          "format": "int32"
        },
        "ysqlServerRpcPort": {
          "type": "integer",
          "format": "int32"
        },
        "nodeExporterPort": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DeviceInfo": {
      "type": "object",
      "required": [
        "diskIops",
        "mountPoints",
        "numVolumes",
        "storageClass",
        "storageType",
        "throughput",
        "volumeSize"
      ],
      "properties": {
        "volumeSize": {
          "type": "integer",
          "format": "int32"
        },
        "numVolumes": {
          "type": "integer",
          "format": "int32"
        },
        "diskIops": {
          "type": "integer",
          "format": "int32"
        },
        "throughput": {
          "type": "integer",
          "format": "int32"
        },
        "storageClass": {
          "type": "string"
        },
        "mountPoints": {
          "type": "string"
        },
        "storageType": {
          "type": "string",
          "enum": [
            "IO1",
            "GP2",
            "GP3",
            "Scratch",
            "Persistent",
            "StandardSSD_LRS",
            "Premium_LRS",
            "UltraSSD_LRS"
          ]
        }
      }
    },
    "EncryptionAtRestConfig": {
      "type": "object",
      "required": [
        "encryptionAtRestEnabled",
        "kmsConfigUUID",
        "opType",
        "type"
      ],
      "properties": {
        "encryptionAtRestEnabled": {
          "type": "boolean"
        },
        "kmsConfigUUID": {
          "type": "string",
          "format": "uuid"
        },
        "opType": {
          "type": "string",
          "enum": [
            "ENABLE",
            "DISABLE",
            "UNDEFINED"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "CMK",
            "DATA_KEY"
          ]
        }
      }
    },
    "ExtraDependencies": {
      "type": "object",
      "required": [
        "installNodeExporter"
      ],
      "properties": {
        "installNodeExporter": {
          "type": "boolean"
        }
      }
    },
    "NodeDetails": {
      "type": "object",
      "required": [
        "azUuid",
        "cloudInfo",
        "cronsActive",
        "isMaster",
        "isRedisServer",
        "isTserver",
        "isYqlServer",
        "isYsqlServer",
        "masterHttpPort",
        "masterRpcPort",
        "nodeExporterPort",
        "nodeIdx",
        "nodeName",
        "nodeUuid",
        "placementUuid",
        "redisServerHttpPort",
        "redisServerRpcPort",
        "state",
        "tserverHttpPort",
        "tserverRpcPort",
        "yqlServerHttpPort",
        "yqlServerRpcPort",
        "ysqlServerHttpPort",
        "ysqlServerRpcPort"
      ],
      "properties": {
        "nodeIdx": {
          "type": "integer",
          "format": "int32"
        },
        "nodeName": {
          "type": "string"
        },
        "nodeUuid": {
          "type": "string",
          "format": "uuid"
        },
        "cloudInfo": {
          "$ref": "#/definitions/CloudSpecificInfo"
        },
        "azUuid": {
          "type": "string",
          "format": "uuid"
        },
        "placementUuid": {
          "type": "string",
          "format": "uuid"
        },
        "state": {
          "type": "string",
          "enum": [
            "ToBeAdded",
            "ToJoinCluster",
            "Provisioned",
            "SoftwareInstalled",
            "UpgradeSoftware",
            "UpdateGFlags",
            "Live",
            "Stopping",
            "Starting",
            "Stopped",
            "Unreachable",
            "ToBeRemoved",
            "Removing",
            "Removed",
            "Adding",
            "BeingDecommissioned",
            "Decommissioned",
            "UpdateCert"
          ]
        },
        "isMaster": {
          "type": "boolean"
        },
        "masterHttpPort": {
          "type": "integer",
          "format": "int32"
        },
        "masterRpcPort": {
          "type": "integer",
          "format": "int32"
        },
        "isTserver": {
          "type": "boolean"
        },
        "tserverHttpPort": {
          "type": "integer",
          "format": "int32"
        },
        "tserverRpcPort": {
          "type": "integer",
          "format": "int32"
        },
        "isRedisServer": {
          "type": "boolean"
        },
        "redisServerHttpPort": {
          "type": "integer",
          "format": "int32"
        },
        "redisServerRpcPort": {
          "type": "integer",
          "format": "int32"
        },
        "isYqlServer": {
          "type": "boolean"
        },
        "yqlServerHttpPort": {
          "type": "integer",
          "format": "int32"
        },
        "yqlServerRpcPort": {
          "type": "integer",
          "format": "int32"
        },
        "isYsqlServer": {
          "type": "boolean"
        },
        "ysqlServerHttpPort": {
          "type": "integer",
          "format": "int32"
        },
        "ysqlServerRpcPort": {
          "type": "integer",
          "format": "int32"
        },
        "nodeExporterPort": {
          "type": "integer",
          "format": "int32"
        },
        "cronsActive": {
          "type": "boolean"
        }
      }
    },
    "NodeDetailsResp": {
      "type": "object",
      "required": [
        "azUuid",
        "cloudInfo",
        "cronsActive",
        "isMaster",
        "isRedisServer",
        "isTserver",
        "isYqlServer",
        "isYsqlServer",
        "masterHttpPort",
        "masterRpcPort",
        "nodeExporterPort",
        "nodeIdx",
        "nodeName",
        "nodeUuid",
        "placementUuid",
        "redisServerHttpPort",
        "redisServerRpcPort",
        "state",
        "tserverHttpPort",
        "tserverRpcPort",
        "yqlServerHttpPort",
        "yqlServerRpcPort",
        "ysqlServerHttpPort",
        "ysqlServerRpcPort"
      ],
      "properties": {
        "nodeIdx": {
          "type": "integer",
          "format": "int32"
        },
        "nodeName": {
          "type": "string"
        },
        "nodeUuid": {
          "type": "string",
          "format": "uuid"
        },
        "cloudInfo": {
          "$ref": "#/definitions/CloudSpecificInfo"
        },
        "azUuid": {
          "type": "string",
          "format": "uuid"
        },
        "placementUuid": {
          "type": "string",
          "format": "uuid"
        },
        "state": {
          "type": "string",
          "enum": [
            "ToBeAdded",
            "ToJoinCluster",
            "Provisioned",
            "SoftwareInstalled",
            "UpgradeSoftware",
            "UpdateGFlags",
            "Live",
            "Stopping",
            "Starting",
            "Stopped",
            "Unreachable",
            "ToBeRemoved",
            "Removing",
            "Removed",
            "Adding",
            "BeingDecommissioned",
            "Decommissioned",
            "UpdateCert"
          ]
        },
        "isMaster": {
          "type": "boolean"
        },
        "masterHttpPort": {
          "type": "integer",
          "format": "int32"
        },
        "masterRpcPort": {
          "type": "integer",
          "format": "int32"
        },
        "isTserver": {
          "type": "boolean"
        },
        "tserverHttpPort": {
          "type": "integer",
          "format": "int32"
        },
        "tserverRpcPort": {
          "type": "integer",
          "format": "int32"
        },
        "isRedisServer": {
          "type": "boolean"
        },
        "redisServerHttpPort": {
          "type": "integer",
          "format": "int32"
        },
        "redisServerRpcPort": {
          "type": "integer",
          "format": "int32"
        },
        "isYqlServer": {
          "type": "boolean"
        },
        "yqlServerHttpPort": {
          "type": "integer",
          "format": "int32"
        },
        "yqlServerRpcPort": {
          "type": "integer",
          "format": "int32"
        },
        "isYsqlServer": {
          "type": "boolean"
        },
        "ysqlServerHttpPort": {
          "type": "integer",
          "format": "int32"
        },
        "ysqlServerRpcPort": {
          "type": "integer",
          "format": "int32"
        },
        "nodeExporterPort": {
          "type": "integer",
          "format": "int32"
        },
        "cronsActive": {
          "type": "boolean"
        },
        "allowedActions": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "ADD",
              "REMOVE",
              "START",
              "STOP",
              "DELETE",
              "QUERY",
              "RELEASE",
              "START_MASTER"
            ]
          }
        }
      }
    },
    "PlacementAZ": {
      "type": "object",
      "required": [
        "isAffinitized",
        "name",
        "numNodesInAZ",
        "replicationFactor",
        "subnet",
        "uuid"
      ],
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "replicationFactor": {
          "type": "integer",
          "format": "int32"
        },
        "subnet": {
          "type": "string"
        },
        "numNodesInAZ": {
          "type": "integer",
          "format": "int32"
        },
        "isAffinitized": {
          "type": "boolean"
        }
      }
    },
    "PlacementCloud": {
      "type": "object",
      "required": [
        "code",
        "regionList",
        "uuid"
      ],
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid"
        },
        "code": {
          "type": "string"
        },
        "regionList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlacementRegion"
          }
        }
      }
    },
    "PlacementInfo": {
      "type": "object",
      "required": [
        "cloudList"
      ],
      "properties": {
        "cloudList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlacementCloud"
          }
        }
      }
    },
    "PlacementRegion": {
      "type": "object",
      "required": [
        "azList",
        "code",
        "name",
        "uuid"
      ],
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid"
        },
        "code": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "azList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlacementAZ"
          }
        }
      }
    },
    "UniverseDefinitionTaskParams": {
      "type": "object",
      "required": [
        "allowInsecure",
        "backupInProgress",
        "capability",
        "clusters",
        "cmkArn",
        "communicationPorts",
        "currentClusterType",
        "deviceInfo",
        "encryptionAtRestConfig",
        "errorString",
        "expectedUniverseVersion",
        "extraDependencies",
        "firstTry",
        "importedState",
        "itestS3PackagePath",
        "nextClusterIndex",
        "nodeDetailsSet",
        "nodeExporterUser",
        "nodePrefix",
        "remotePackagePath",
        "resetAZConfig",
        "rootCA",
        "setTxnTableWaitCountFlag",
        "universePaused",
        "universeUUID",
        "updateInProgress",
        "updateSucceeded",
        "userAZSelected"
      ],
      "properties": {
        "errorString": {
          "type": "string"
        },
        "nodeExporterUser": {
          "type": "string"
        },
        "deviceInfo": {
          "$ref": "#/definitions/DeviceInfo"
        },
        "universeUUID": {
          "type": "string",
          "format": "uuid"
        },
        "expectedUniverseVersion": {
          "type": "integer",
          "format": "int32"
        },
        "cmkArn": {
          "type": "string"
        },
        "encryptionAtRestConfig": {
          "$ref": "#/definitions/EncryptionAtRestConfig"
        },
        "nodeDetailsSet": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/NodeDetails"
          }
        },
        "communicationPorts": {
          "$ref": "#/definitions/CommunicationPorts"
        },
        "extraDependencies": {
          "$ref": "#/definitions/ExtraDependencies"
        },
        "firstTry": {
          "type": "boolean"
        },
        "clusters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cluster"
          }
        },
        "currentClusterType": {
          "type": "string",
          "enum": [
            "PRIMARY",
            "ASYNC"
          ]
        },
        "nodePrefix": {
          "type": "string"
        },
        "rootCA": {
          "type": "string",
          "format": "uuid"
        },
        "userAZSelected": {
          "type": "boolean"
        },
        "resetAZConfig": {
          "type": "boolean"
        },
        "updateInProgress": {
          "type": "boolean"
        },
        "backupInProgress": {
          "type": "boolean"
        },
        "updateSucceeded": {
          "type": "boolean"
        },
        "universePaused": {
          "type": "boolean"
        },
        "nextClusterIndex": {
          "type": "integer",
          "format": "int32"
        },
        "allowInsecure": {
          "type": "boolean"
        },
        "setTxnTableWaitCountFlag": {
          "type": "boolean"
        },
        "itestS3PackagePath": {
          "type": "string"
        },
        "remotePackagePath": {
          "type": "string"
        },
        "importedState": {
          "type": "string",
          "enum": [
            "NONE",
            "STARTED",
            "MASTERS_ADDED",
            "TSERVERS_ADDED",
            "IMPORTED"
          ]
        },
        "capability": {
          "type": "string",
          "enum": [
            "READ_ONLY",
            "EDITS_ALLOWED"
          ]
        }
      }
    },
    "UniverseDefinitionTaskParamsResp": {
      "type": "object",
      "required": [
        "allowInsecure",
        "backupInProgress",
        "capability",
        "clusters",
        "cmkArn",
        "communicationPorts",
        "currentClusterType",
        "deviceInfo",
        "encryptionAtRestConfig",
        "errorString",
        "expectedUniverseVersion",
        "extraDependencies",
        "firstTry",
        "importedState",
        "itestS3PackagePath",
        "nextClusterIndex",
        "nodeExporterUser",
        "nodePrefix",
        "remotePackagePath",
        "resetAZConfig",
        "rootCA",
        "setTxnTableWaitCountFlag",
        "universePaused",
        "universeUUID",
        "updateInProgress",
        "updateSucceeded",
        "userAZSelected"
      ],
      "properties": {
        "errorString": {
          "type": "string"
        },
        "nodeExporterUser": {
          "type": "string"
        },
        "deviceInfo": {
          "$ref": "#/definitions/DeviceInfo"
        },
        "universeUUID": {
          "type": "string",
          "format": "uuid"
        },
        "expectedUniverseVersion": {
          "type": "integer",
          "format": "int32"
        },
        "cmkArn": {
          "type": "string"
        },
        "encryptionAtRestConfig": {
          "$ref": "#/definitions/EncryptionAtRestConfig"
        },
        "nodeDetailsSet": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/NodeDetailsResp"
          }
        },
        "communicationPorts": {
          "$ref": "#/definitions/CommunicationPorts"
        },
        "extraDependencies": {
          "$ref": "#/definitions/ExtraDependencies"
        },
        "firstTry": {
          "type": "boolean"
        },
        "clusters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cluster"
          }
        },
        "currentClusterType": {
          "type": "string",
          "enum": [
            "PRIMARY",
            "ASYNC"
          ]
        },
        "nodePrefix": {
          "type": "string"
        },
        "rootCA": {
          "type": "string",
          "format": "uuid"
        },
        "userAZSelected": {
          "type": "boolean"
        },
        "resetAZConfig": {
          "type": "boolean"
        },
        "updateInProgress": {
          "type": "boolean"
        },
        "backupInProgress": {
          "type": "boolean"
        },
        "updateSucceeded": {
          "type": "boolean"
        },
        "universePaused": {
          "type": "boolean"
        },
        "nextClusterIndex": {
          "type": "integer",
          "format": "int32"
        },
        "allowInsecure": {
          "type": "boolean"
        },
        "setTxnTableWaitCountFlag": {
          "type": "boolean"
        },
        "itestS3PackagePath": {
          "type": "string"
        },
        "remotePackagePath": {
          "type": "string"
        },
        "importedState": {
          "type": "string",
          "enum": [
            "NONE",
            "STARTED",
            "MASTERS_ADDED",
            "TSERVERS_ADDED",
            "IMPORTED"
          ]
        },
        "capability": {
          "type": "string",
          "enum": [
            "READ_ONLY",
            "EDITS_ALLOWED"
          ]
        }
      }
    },
    "UniverseResourceDetails": {
      "type": "object",
      "required": [
        "azList",
        "ebsPricePerHour",
        "gp3FreePiops",
        "gp3FreeThroughput",
        "memSizeGB",
        "numCores",
        "numNodes",
        "pricePerHour",
        "volumeCount",
        "volumeSizeGB"
      ],
      "properties": {
        "pricePerHour": {
          "type": "number",
          "format": "double"
        },
        "ebsPricePerHour": {
          "type": "number",
          "format": "double"
        },
        "numCores": {
          "type": "number",
          "format": "double"
        },
        "memSizeGB": {
          "type": "number",
          "format": "double"
        },
        "volumeCount": {
          "type": "integer",
          "format": "int32"
        },
        "volumeSizeGB": {
          "type": "integer",
          "format": "int32"
        },
        "numNodes": {
          "type": "integer",
          "format": "int32"
        },
        "gp3FreePiops": {
          "type": "integer",
          "format": "int32"
        },
        "gp3FreeThroughput": {
          "type": "integer",
          "format": "int32"
        },
        "azList": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UniverseResp": {
      "type": "object",
      "required": [
        "creationDate",
        "dnsName",
        "name",
        "pricePerHour",
        "resources",
        "sampleAppCommandTxt",
        "taskUUID",
        "universeConfig",
        "universeDetails",
        "universeUUID",
        "version"
      ],
      "properties": {
        "universeUUID": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "creationDate": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "dnsName": {
          "type": "string"
        },
        "resources": {
          "$ref": "#/definitions/UniverseResourceDetails"
        },
        "universeDetails": {
          "$ref": "#/definitions/UniverseDefinitionTaskParamsResp"
        },
        "universeConfig": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "taskUUID": {
          "type": "string"
        },
        "sampleAppCommandTxt": {
          "type": "string"
        },
        "pricePerHour": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "UserIntent": {
      "type": "object",
      "required": [
        "accessKeyCode",
        "assignPublicIP",
        "awsArnString",
        "deviceInfo",
        "enableClientToNodeEncrypt",
        "enableExposingService",
        "enableIPV6",
        "enableNodeToNodeEncrypt",
        "enableVolumeEncryption",
        "enableYEDIS",
        "enableYSQL",
        "instanceTags",
        "instanceType",
        "masterGFlags",
        "numNodes",
        "preferredRegion",
        "provider",
        "providerType",
        "regionList",
        "replicationFactor",
        "tserverGFlags",
        "universeName",
        "useHostname",
        "useTimeSync",
        "ybSoftwareVersion"
      ],
      "properties": {
        "universeName": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "providerType": {
          "type": "string",
          "enum": [
            "unknown",
            "aws",
            "gcp",
            "azu",
            "docker",
            "onprem",
            "kubernetes",
            "local",
            "other"
          ]
        },
        "replicationFactor": {
          "type": "integer",
          "format": "int32"
        },
        "regionList": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "preferredRegion": {
          "type": "string",
          "format": "uuid"
        },
        "instanceType": {
          "type": "string"
        },
        "numNodes": {
          "type": "integer",
          "format": "int32"
        },
        "ybSoftwareVersion": {
          "type": "string"
        },
        "accessKeyCode": {
          "type": "string"
        },
        "deviceInfo": {
          "$ref": "#/definitions/DeviceInfo"
        },
        "assignPublicIP": {
          "type": "boolean"
        },
        "useTimeSync": {
          "type": "boolean"
        },
        "enableYSQL": {
          "type": "boolean"
        },
        "enableYEDIS": {
          "type": "boolean"
        },
        "enableNodeToNodeEncrypt": {
          "type": "boolean"
        },
        "enableClientToNodeEncrypt": {
          "type": "boolean"
        },
        "enableVolumeEncryption": {
          "type": "boolean"
        },
        "enableIPV6": {
          "type": "boolean"
        },
        "enableExposingService": {
          "type": "string",
          "enum": [
            "NONE",
            "EXPOSED",
            "UNEXPOSED"
          ]
        },
        "awsArnString": {
          "type": "string"
        },
        "useHostname": {
          "type": "boolean"
        },
        "masterGFlags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "tserverGFlags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "instanceTags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "UpgradeParams": {
      "type": "object",
      "required": [
        "allowInsecure",
        "backupInProgress",
        "capability",
        "certUUID",
        "clusters",
        "cmkArn",
        "communicationPorts",
        "currentClusterType",
        "deviceInfo",
        "encryptionAtRestConfig",
        "errorString",
        "expectedUniverseVersion",
        "extraDependencies",
        "firstTry",
        "importedState",
        "itestS3PackagePath",
        "masterGFlags",
        "nextClusterIndex",
        "nodeDetailsSet",
        "nodeExporterUser",
        "nodePrefix",
        "remotePackagePath",
        "resetAZConfig",
        "rootCA",
        "rotateRoot",
        "setTxnTableWaitCountFlag",
        "sleepAfterMasterRestartMillis",
        "sleepAfterTServerRestartMillis",
        "taskType",
        "tserverGFlags",
        "universePaused",
        "universeUUID",
        "updateInProgress",
        "updateSucceeded",
        "upgradeOption",
        "userAZSelected",
        "ybSoftwareVersion"
      ],
      "properties": {
        "errorString": {
          "type": "string"
        },
        "nodeExporterUser": {
          "type": "string"
        },
        "deviceInfo": {
          "$ref": "#/definitions/DeviceInfo"
        },
        "universeUUID": {
          "type": "string",
          "format": "uuid"
        },
        "expectedUniverseVersion": {
          "type": "integer",
          "format": "int32"
        },
        "cmkArn": {
          "type": "string"
        },
        "encryptionAtRestConfig": {
          "$ref": "#/definitions/EncryptionAtRestConfig"
        },
        "nodeDetailsSet": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/NodeDetails"
          }
        },
        "communicationPorts": {
          "$ref": "#/definitions/CommunicationPorts"
        },
        "extraDependencies": {
          "$ref": "#/definitions/ExtraDependencies"
        },
        "firstTry": {
          "type": "boolean"
        },
        "clusters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cluster"
          }
        },
        "currentClusterType": {
          "type": "string",
          "enum": [
            "PRIMARY",
            "ASYNC"
          ]
        },
        "nodePrefix": {
          "type": "string"
        },
        "rootCA": {
          "type": "string",
          "format": "uuid"
        },
        "userAZSelected": {
          "type": "boolean"
        },
        "resetAZConfig": {
          "type": "boolean"
        },
        "updateInProgress": {
          "type": "boolean"
        },
        "backupInProgress": {
          "type": "boolean"
        },
        "updateSucceeded": {
          "type": "boolean"
        },
        "universePaused": {
          "type": "boolean"
        },
        "nextClusterIndex": {
          "type": "integer",
          "format": "int32"
        },
        "allowInsecure": {
          "type": "boolean"
        },
        "setTxnTableWaitCountFlag": {
          "type": "boolean"
        },
        "itestS3PackagePath": {
          "type": "string"
        },
        "remotePackagePath": {
          "type": "string"
        },
        "importedState": {
          "type": "string",
          "enum": [
            "NONE",
            "STARTED",
            "MASTERS_ADDED",
            "TSERVERS_ADDED",
            "IMPORTED"
          ]
        },
        "capability": {
          "type": "string",
          "enum": [
            "READ_ONLY",
            "EDITS_ALLOWED"
          ]
        },
        "taskType": {
          "type": "string",
          "enum": [
            "Everything",
            "Software",
            "GFlags",
            "Restart",
            "Certs"
          ]
        },
        "ybSoftwareVersion": {
          "type": "string"
        },
        "certUUID": {
          "type": "string",
          "format": "uuid"
        },
        "rotateRoot": {
          "type": "boolean"
        },
        "masterGFlags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "tserverGFlags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sleepAfterMasterRestartMillis": {
          "type": "integer",
          "format": "int32"
        },
        "sleepAfterTServerRestartMillis": {
          "type": "integer",
          "format": "int32"
        },
        "upgradeOption": {
          "type": "string",
          "enum": [
            "Rolling",
            "Non-Rolling",
            "Non-Restart"
          ]
        }
      }
    },
    "YWSuccess": {
      "type": "object",
      "required": [
        "message",
        "success"
      ],
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}
