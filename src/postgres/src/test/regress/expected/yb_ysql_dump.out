--
-- YSQL database dump
--

-- Dumped from database version 11.2-YB-2.11.3.0-b0
-- Dumped by ysql_dump version 11.2-YB-2.11.3.0-b0

SET yb_binary_restore = true;
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;
SET yb_enable_create_with_table_oid = true;

--
-- Name: grp1; Type: TABLEGROUP; Schema: -; Owner: tablegroup_test_user
--

CREATE TABLEGROUP grp1;


ALTER TABLEGROUP grp1 OWNER TO tablegroup_test_user;

--
-- Name: grp2; Type: TABLEGROUP; Schema: -; Owner: tablegroup_test_user
--

CREATE TABLEGROUP grp2;


ALTER TABLEGROUP grp2 OWNER TO tablegroup_test_user;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: chat_user; Type: TABLE; Schema: public; Owner: yugabyte_test
--


-- For binary upgrade, must preserve pg_type oid
SELECT pg_catalog.binary_upgrade_set_next_pg_type_oid('16474'::pg_catalog.oid);


-- For binary upgrade, must preserve pg_type array oid
SELECT pg_catalog.binary_upgrade_set_next_array_pg_type_oid('16473'::pg_catalog.oid);

CREATE TABLE public.chat_user (
    "chatID" text NOT NULL,
    CONSTRAINT chat_user_pkey PRIMARY KEY(("chatID") HASH)
)
SPLIT INTO 3 TABLETS;


ALTER TABLE public.chat_user OWNER TO yugabyte_test;

--
-- Name: rls_private; Type: TABLE; Schema: public; Owner: yugabyte_test
--


-- For binary upgrade, must preserve pg_type oid
SELECT pg_catalog.binary_upgrade_set_next_pg_type_oid('16466'::pg_catalog.oid);


-- For binary upgrade, must preserve pg_type array oid
SELECT pg_catalog.binary_upgrade_set_next_array_pg_type_oid('16465'::pg_catalog.oid);

CREATE TABLE public.rls_private (
    k integer NOT NULL,
    v text,
    CONSTRAINT rls_private_pkey PRIMARY KEY((k) HASH)
)
SPLIT INTO 3 TABLETS;

ALTER TABLE ONLY public.rls_private FORCE ROW LEVEL SECURITY;


ALTER TABLE public.rls_private OWNER TO yugabyte_test;

--
-- Name: rls_public; Type: TABLE; Schema: public; Owner: yugabyte_test
--


-- For binary upgrade, must preserve pg_type oid
SELECT pg_catalog.binary_upgrade_set_next_pg_type_oid('16461'::pg_catalog.oid);


-- For binary upgrade, must preserve pg_type array oid
SELECT pg_catalog.binary_upgrade_set_next_array_pg_type_oid('16460'::pg_catalog.oid);

CREATE TABLE public.rls_public (
    k integer NOT NULL,
    v text,
    CONSTRAINT rls_public_pkey PRIMARY KEY((k) HASH)
)
SPLIT INTO 3 TABLETS;


ALTER TABLE public.rls_public OWNER TO yugabyte_test;

--
-- Name: tbl1; Type: TABLE; Schema: public; Owner: yugabyte_test
--


-- For binary upgrade, must preserve pg_type oid
SELECT pg_catalog.binary_upgrade_set_next_pg_type_oid('16389'::pg_catalog.oid);


-- For binary upgrade, must preserve pg_type array oid
SELECT pg_catalog.binary_upgrade_set_next_array_pg_type_oid('16388'::pg_catalog.oid);

CREATE TABLE public.tbl1 (
    a integer NOT NULL,
    b integer
)
SPLIT INTO 3 TABLETS;


ALTER TABLE public.tbl1 OWNER TO yugabyte_test;

--
-- Name: tbl10; Type: TABLE; Schema: public; Owner: yugabyte_test
--


-- For binary upgrade, must preserve pg_type oid
SELECT pg_catalog.binary_upgrade_set_next_pg_type_oid('16439'::pg_catalog.oid);


-- For binary upgrade, must preserve pg_type array oid
SELECT pg_catalog.binary_upgrade_set_next_array_pg_type_oid('16438'::pg_catalog.oid);

CREATE TABLE public.tbl10 (
    a integer NOT NULL,
    b integer NOT NULL,
    c integer NOT NULL,
    d integer,
    CONSTRAINT tbl10_pkey PRIMARY KEY((a, c) HASH, b ASC)
)
SPLIT INTO 3 TABLETS;


ALTER TABLE public.tbl10 OWNER TO yugabyte_test;

--
-- Name: tbl11; Type: TABLE; Schema: public; Owner: yugabyte_test
--


-- For binary upgrade, must preserve pg_type oid
SELECT pg_catalog.binary_upgrade_set_next_pg_type_oid('16444'::pg_catalog.oid);


-- For binary upgrade, must preserve pg_type array oid
SELECT pg_catalog.binary_upgrade_set_next_array_pg_type_oid('16443'::pg_catalog.oid);

CREATE TABLE public.tbl11 (
    a integer NOT NULL,
    b integer NOT NULL,
    c integer,
    CONSTRAINT tbl11_pkey PRIMARY KEY(a DESC, b ASC)
);


ALTER TABLE public.tbl11 OWNER TO yugabyte_test;

--
-- Name: tbl12; Type: TABLE; Schema: public; Owner: yugabyte_test
--


-- For binary upgrade, must preserve pg_type oid
SELECT pg_catalog.binary_upgrade_set_next_pg_type_oid('16449'::pg_catalog.oid);


-- For binary upgrade, must preserve pg_type array oid
SELECT pg_catalog.binary_upgrade_set_next_array_pg_type_oid('16448'::pg_catalog.oid);

CREATE TABLE public.tbl12 (
    a integer NOT NULL,
    b integer,
    c integer NOT NULL,
    d integer NOT NULL,
    CONSTRAINT tbl12_pkey PRIMARY KEY(a ASC, d DESC, c DESC)
);


ALTER TABLE public.tbl12 OWNER TO yugabyte_test;

--
-- Name: tbl13; Type: TABLE; Schema: public; Owner: yugabyte_test
--


-- For binary upgrade, must preserve pg_type oid
SELECT pg_catalog.binary_upgrade_set_next_pg_type_oid('16454'::pg_catalog.oid);


-- For binary upgrade, must preserve pg_type array oid
SELECT pg_catalog.binary_upgrade_set_next_array_pg_type_oid('16453'::pg_catalog.oid);

CREATE TABLE public.tbl13 (
    a integer,
    b integer NOT NULL,
    c integer NOT NULL,
    d integer,
    CONSTRAINT tbl13_pkey PRIMARY KEY((b, c) HASH)
)
SPLIT INTO 3 TABLETS;


ALTER TABLE public.tbl13 OWNER TO yugabyte_test;

--
-- Name: tbl1_a_seq; Type: SEQUENCE; Schema: public; Owner: yugabyte_test
--


-- For binary upgrade, must preserve pg_type oid
SELECT pg_catalog.binary_upgrade_set_next_pg_type_oid('16386'::pg_catalog.oid);

CREATE SEQUENCE public.tbl1_a_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.tbl1_a_seq OWNER TO yugabyte_test;

--
-- Name: tbl1_a_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: yugabyte_test
--

ALTER SEQUENCE public.tbl1_a_seq OWNED BY public.tbl1.a;


--
-- Name: tbl2; Type: TABLE; Schema: public; Owner: yugabyte_test
--


-- For binary upgrade, must preserve pg_type oid
SELECT pg_catalog.binary_upgrade_set_next_pg_type_oid('16395'::pg_catalog.oid);


-- For binary upgrade, must preserve pg_type array oid
SELECT pg_catalog.binary_upgrade_set_next_array_pg_type_oid('16394'::pg_catalog.oid);

CREATE TABLE public.tbl2 (
    a integer NOT NULL
)
SPLIT INTO 3 TABLETS;


ALTER TABLE public.tbl2 OWNER TO yugabyte_test;

--
-- Name: tbl2_a_seq; Type: SEQUENCE; Schema: public; Owner: yugabyte_test
--


-- For binary upgrade, must preserve pg_type oid
SELECT pg_catalog.binary_upgrade_set_next_pg_type_oid('16392'::pg_catalog.oid);

CREATE SEQUENCE public.tbl2_a_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.tbl2_a_seq OWNER TO yugabyte_test;

--
-- Name: tbl2_a_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: yugabyte_test
--

ALTER SEQUENCE public.tbl2_a_seq OWNED BY public.tbl2.a;


--
-- Name: tbl3; Type: TABLE; Schema: public; Owner: yugabyte_test
--


-- For binary upgrade, must preserve pg_type oid
SELECT pg_catalog.binary_upgrade_set_next_pg_type_oid('16399'::pg_catalog.oid);


-- For binary upgrade, must preserve pg_type array oid
SELECT pg_catalog.binary_upgrade_set_next_array_pg_type_oid('16398'::pg_catalog.oid);

CREATE TABLE public.tbl3 (
    a integer NOT NULL,
    b integer,
    CONSTRAINT tbl3_pkey PRIMARY KEY(a ASC)
);


ALTER TABLE public.tbl3 OWNER TO yugabyte_test;

--
-- Name: tbl4; Type: TABLE; Schema: public; Owner: yugabyte_test
--


-- For binary upgrade, must preserve pg_type oid
SELECT pg_catalog.binary_upgrade_set_next_pg_type_oid('16404'::pg_catalog.oid);


-- For binary upgrade, must preserve pg_type array oid
SELECT pg_catalog.binary_upgrade_set_next_array_pg_type_oid('16403'::pg_catalog.oid);

CREATE TABLE public.tbl4 (
    a integer NOT NULL,
    b integer NOT NULL,
    CONSTRAINT tbl4_pkey PRIMARY KEY((a) HASH, b ASC)
)
SPLIT INTO 3 TABLETS;


ALTER TABLE public.tbl4 OWNER TO yugabyte_test;

--
-- Name: tbl5; Type: TABLE; Schema: public; Owner: yugabyte_test
--


-- For binary upgrade, must preserve pg_type oid
SELECT pg_catalog.binary_upgrade_set_next_pg_type_oid('16409'::pg_catalog.oid);


-- For binary upgrade, must preserve pg_type array oid
SELECT pg_catalog.binary_upgrade_set_next_array_pg_type_oid('16408'::pg_catalog.oid);

CREATE TABLE public.tbl5 (
    a integer NOT NULL,
    b integer,
    c integer,
    CONSTRAINT tbl5_pkey PRIMARY KEY((a) HASH)
)
SPLIT INTO 3 TABLETS;


ALTER TABLE public.tbl5 OWNER TO yugabyte_test;

--
-- Name: tbl6; Type: TABLE; Schema: public; Owner: yugabyte_test
--


-- For binary upgrade, must preserve pg_type oid
SELECT pg_catalog.binary_upgrade_set_next_pg_type_oid('16414'::pg_catalog.oid);


-- For binary upgrade, must preserve pg_type array oid
SELECT pg_catalog.binary_upgrade_set_next_array_pg_type_oid('16413'::pg_catalog.oid);

CREATE TABLE public.tbl6 (
    a integer NOT NULL,
    CONSTRAINT tbl6_pkey PRIMARY KEY((a) HASH)
)
SPLIT INTO 3 TABLETS;


ALTER TABLE public.tbl6 OWNER TO yugabyte_test;

--
-- Name: tbl7; Type: TABLE; Schema: public; Owner: yugabyte_test
--


-- For binary upgrade, must preserve pg_type oid
SELECT pg_catalog.binary_upgrade_set_next_pg_type_oid('16419'::pg_catalog.oid);


-- For binary upgrade, must preserve pg_type array oid
SELECT pg_catalog.binary_upgrade_set_next_array_pg_type_oid('16418'::pg_catalog.oid);

CREATE TABLE public.tbl7 (
    a integer,
    b integer NOT NULL,
    c integer NOT NULL,
    d integer,
    CONSTRAINT tbl7_pkey PRIMARY KEY((b) HASH, c ASC)
)
SPLIT INTO 3 TABLETS;


ALTER TABLE public.tbl7 OWNER TO yugabyte_test;

--
-- Name: tbl8; Type: TABLE; Schema: public; Owner: yugabyte_test
--


-- For binary upgrade, must preserve pg_type oid
SELECT pg_catalog.binary_upgrade_set_next_pg_type_oid('16424'::pg_catalog.oid);


-- For binary upgrade, must preserve pg_type array oid
SELECT pg_catalog.binary_upgrade_set_next_array_pg_type_oid('16423'::pg_catalog.oid);

CREATE TABLE public.tbl8 (
    a integer NOT NULL,
    b integer,
    c integer,
    d integer NOT NULL,
    CONSTRAINT tbl8_pkey PRIMARY KEY((a) HASH, d ASC)
)
SPLIT INTO 3 TABLETS;


ALTER TABLE public.tbl8 OWNER TO yugabyte_test;

--
-- Name: tbl9; Type: TABLE; Schema: public; Owner: yugabyte_test
--


-- For binary upgrade, must preserve pg_type oid
SELECT pg_catalog.binary_upgrade_set_next_pg_type_oid('16434'::pg_catalog.oid);


-- For binary upgrade, must preserve pg_type array oid
SELECT pg_catalog.binary_upgrade_set_next_array_pg_type_oid('16433'::pg_catalog.oid);

CREATE TABLE public.tbl9 (
    a integer NOT NULL,
    b integer NOT NULL,
    c integer,
    CONSTRAINT tbl9_pkey PRIMARY KEY((a, b) HASH)
)
SPLIT INTO 3 TABLETS;


ALTER TABLE public.tbl9 OWNER TO yugabyte_test;

--
-- Name: tgroup_after_options; Type: TABLE; Schema: public; Owner: tablegroup_test_user
--


-- For binary upgrade, must preserve pg_type oid
SELECT pg_catalog.binary_upgrade_set_next_pg_type_oid('16503'::pg_catalog.oid);


-- For binary upgrade, must preserve pg_type array oid
SELECT pg_catalog.binary_upgrade_set_next_array_pg_type_oid('16502'::pg_catalog.oid);

CREATE TABLE public.tgroup_after_options (
    a integer
)
WITH (a=b)
TABLEGROUP grp1;


ALTER TABLE public.tgroup_after_options OWNER TO tablegroup_test_user;

--
-- Name: tgroup_empty_options; Type: TABLE; Schema: public; Owner: tablegroup_test_user
--


-- For binary upgrade, must preserve pg_type oid
SELECT pg_catalog.binary_upgrade_set_next_pg_type_oid('16509'::pg_catalog.oid);


-- For binary upgrade, must preserve pg_type array oid
SELECT pg_catalog.binary_upgrade_set_next_array_pg_type_oid('16508'::pg_catalog.oid);

CREATE TABLE public.tgroup_empty_options (
    a integer
)
SPLIT INTO 3 TABLETS;


ALTER TABLE public.tgroup_empty_options OWNER TO tablegroup_test_user;

--
-- Name: tgroup_in_between_options; Type: TABLE; Schema: public; Owner: tablegroup_test_user
--


-- For binary upgrade, must preserve pg_type oid
SELECT pg_catalog.binary_upgrade_set_next_pg_type_oid('16506'::pg_catalog.oid);


-- For binary upgrade, must preserve pg_type array oid
SELECT pg_catalog.binary_upgrade_set_next_array_pg_type_oid('16505'::pg_catalog.oid);

CREATE TABLE public.tgroup_in_between_options (
    a integer
)
WITH (a=b, autovacuum_enabled='true')
TABLEGROUP grp1;


ALTER TABLE public.tgroup_in_between_options OWNER TO tablegroup_test_user;

--
-- Name: tgroup_no_options_and_tgroup; Type: TABLE; Schema: public; Owner: tablegroup_test_user
--


-- For binary upgrade, must preserve pg_type oid
SELECT pg_catalog.binary_upgrade_set_next_pg_type_oid('16488'::pg_catalog.oid);


-- For binary upgrade, must preserve pg_type array oid
SELECT pg_catalog.binary_upgrade_set_next_array_pg_type_oid('16487'::pg_catalog.oid);

CREATE TABLE public.tgroup_no_options_and_tgroup (
    a integer
)
TABLEGROUP grp1;


ALTER TABLE public.tgroup_no_options_and_tgroup OWNER TO tablegroup_test_user;

--
-- Name: tgroup_one_option; Type: TABLE; Schema: public; Owner: tablegroup_test_user
--


-- For binary upgrade, must preserve pg_type oid
SELECT pg_catalog.binary_upgrade_set_next_pg_type_oid('16491'::pg_catalog.oid);


-- For binary upgrade, must preserve pg_type array oid
SELECT pg_catalog.binary_upgrade_set_next_array_pg_type_oid('16490'::pg_catalog.oid);

CREATE TABLE public.tgroup_one_option (
    a integer
)
WITH (autovacuum_enabled='true')
SPLIT INTO 3 TABLETS;


ALTER TABLE public.tgroup_one_option OWNER TO tablegroup_test_user;

--
-- Name: tgroup_one_option_and_tgroup; Type: TABLE; Schema: public; Owner: tablegroup_test_user
--


-- For binary upgrade, must preserve pg_type oid
SELECT pg_catalog.binary_upgrade_set_next_pg_type_oid('16494'::pg_catalog.oid);


-- For binary upgrade, must preserve pg_type array oid
SELECT pg_catalog.binary_upgrade_set_next_array_pg_type_oid('16493'::pg_catalog.oid);

CREATE TABLE public.tgroup_one_option_and_tgroup (
    a integer
)
WITH (autovacuum_enabled='true')
TABLEGROUP grp2;


ALTER TABLE public.tgroup_one_option_and_tgroup OWNER TO tablegroup_test_user;

--
-- Name: tgroup_options; Type: TABLE; Schema: public; Owner: tablegroup_test_user
--


-- For binary upgrade, must preserve pg_type oid
SELECT pg_catalog.binary_upgrade_set_next_pg_type_oid('16497'::pg_catalog.oid);


-- For binary upgrade, must preserve pg_type array oid
SELECT pg_catalog.binary_upgrade_set_next_array_pg_type_oid('16496'::pg_catalog.oid);

CREATE TABLE public.tgroup_options (
    a integer
)
WITH (autovacuum_enabled='true', parallel_workers='2')
SPLIT INTO 3 TABLETS;


ALTER TABLE public.tgroup_options OWNER TO tablegroup_test_user;

--
-- Name: tgroup_options_and_tgroup; Type: TABLE; Schema: public; Owner: tablegroup_test_user
--


-- For binary upgrade, must preserve pg_type oid
SELECT pg_catalog.binary_upgrade_set_next_pg_type_oid('16500'::pg_catalog.oid);


-- For binary upgrade, must preserve pg_type array oid
SELECT pg_catalog.binary_upgrade_set_next_array_pg_type_oid('16499'::pg_catalog.oid);

CREATE TABLE public.tgroup_options_and_tgroup (
    a integer
)
WITH (autovacuum_enabled='true', parallel_workers='2')
TABLEGROUP grp2;


ALTER TABLE public.tgroup_options_and_tgroup OWNER TO tablegroup_test_user;

--
-- Name: uaccount; Type: TABLE; Schema: public; Owner: regress_rls_alice
--


-- For binary upgrade, must preserve pg_type oid
SELECT pg_catalog.binary_upgrade_set_next_pg_type_oid('16480'::pg_catalog.oid);


-- For binary upgrade, must preserve pg_type array oid
SELECT pg_catalog.binary_upgrade_set_next_array_pg_type_oid('16479'::pg_catalog.oid);

CREATE TABLE public.uaccount (
    pguser name NOT NULL,
    seclv integer,
    CONSTRAINT uaccount_pkey PRIMARY KEY(pguser ASC)
);


ALTER TABLE public.uaccount OWNER TO regress_rls_alice;

--
-- Name: tbl1 a; Type: DEFAULT; Schema: public; Owner: yugabyte_test
--

ALTER TABLE ONLY public.tbl1 ALTER COLUMN a SET DEFAULT nextval('public.tbl1_a_seq'::regclass);


--
-- Name: tbl2 a; Type: DEFAULT; Schema: public; Owner: yugabyte_test
--

ALTER TABLE ONLY public.tbl2 ALTER COLUMN a SET DEFAULT nextval('public.tbl2_a_seq'::regclass);


--
-- Data for Name: chat_user; Type: TABLE DATA; Schema: public; Owner: yugabyte_test
--

COPY public.chat_user ("chatID") FROM stdin;
\.


--
-- Data for Name: rls_private; Type: TABLE DATA; Schema: public; Owner: yugabyte_test
--

COPY public.rls_private (k, v) FROM stdin;
\.


--
-- Data for Name: rls_public; Type: TABLE DATA; Schema: public; Owner: yugabyte_test
--

COPY public.rls_public (k, v) FROM stdin;
\.


--
-- Data for Name: tbl1; Type: TABLE DATA; Schema: public; Owner: yugabyte_test
--

COPY public.tbl1 (a, b) FROM stdin;
1	100
\.


--
-- Data for Name: tbl10; Type: TABLE DATA; Schema: public; Owner: yugabyte_test
--

COPY public.tbl10 (a, b, c, d) FROM stdin;
\.


--
-- Data for Name: tbl11; Type: TABLE DATA; Schema: public; Owner: yugabyte_test
--

COPY public.tbl11 (a, b, c) FROM stdin;
\.


--
-- Data for Name: tbl12; Type: TABLE DATA; Schema: public; Owner: yugabyte_test
--

COPY public.tbl12 (a, b, c, d) FROM stdin;
\.


--
-- Data for Name: tbl13; Type: TABLE DATA; Schema: public; Owner: yugabyte_test
--

COPY public.tbl13 (a, b, c, d) FROM stdin;
\.


--
-- Data for Name: tbl2; Type: TABLE DATA; Schema: public; Owner: yugabyte_test
--

COPY public.tbl2 (a) FROM stdin;
\.


--
-- Data for Name: tbl3; Type: TABLE DATA; Schema: public; Owner: yugabyte_test
--

COPY public.tbl3 (a, b) FROM stdin;
\.


--
-- Data for Name: tbl4; Type: TABLE DATA; Schema: public; Owner: yugabyte_test
--

COPY public.tbl4 (a, b) FROM stdin;
\.


--
-- Data for Name: tbl5; Type: TABLE DATA; Schema: public; Owner: yugabyte_test
--

COPY public.tbl5 (a, b, c) FROM stdin;
4	7	16
\.


--
-- Data for Name: tbl6; Type: TABLE DATA; Schema: public; Owner: yugabyte_test
--

COPY public.tbl6 (a) FROM stdin;
\.


--
-- Data for Name: tbl7; Type: TABLE DATA; Schema: public; Owner: yugabyte_test
--

COPY public.tbl7 (a, b, c, d) FROM stdin;
\.


--
-- Data for Name: tbl8; Type: TABLE DATA; Schema: public; Owner: yugabyte_test
--

COPY public.tbl8 (a, b, c, d) FROM stdin;
\.


--
-- Data for Name: tbl9; Type: TABLE DATA; Schema: public; Owner: yugabyte_test
--

COPY public.tbl9 (a, b, c) FROM stdin;
\.


--
-- Data for Name: tgroup_after_options; Type: TABLE DATA; Schema: public; Owner: tablegroup_test_user
--

COPY public.tgroup_after_options (a) FROM stdin;
\.


--
-- Data for Name: tgroup_empty_options; Type: TABLE DATA; Schema: public; Owner: tablegroup_test_user
--

COPY public.tgroup_empty_options (a) FROM stdin;
\.


--
-- Data for Name: tgroup_in_between_options; Type: TABLE DATA; Schema: public; Owner: tablegroup_test_user
--

COPY public.tgroup_in_between_options (a) FROM stdin;
\.


--
-- Data for Name: tgroup_no_options_and_tgroup; Type: TABLE DATA; Schema: public; Owner: tablegroup_test_user
--

COPY public.tgroup_no_options_and_tgroup (a) FROM stdin;
\.


--
-- Data for Name: tgroup_one_option; Type: TABLE DATA; Schema: public; Owner: tablegroup_test_user
--

COPY public.tgroup_one_option (a) FROM stdin;
\.


--
-- Data for Name: tgroup_one_option_and_tgroup; Type: TABLE DATA; Schema: public; Owner: tablegroup_test_user
--

COPY public.tgroup_one_option_and_tgroup (a) FROM stdin;
\.


--
-- Data for Name: tgroup_options; Type: TABLE DATA; Schema: public; Owner: tablegroup_test_user
--

COPY public.tgroup_options (a) FROM stdin;
\.


--
-- Data for Name: tgroup_options_and_tgroup; Type: TABLE DATA; Schema: public; Owner: tablegroup_test_user
--

COPY public.tgroup_options_and_tgroup (a) FROM stdin;
\.


--
-- Data for Name: uaccount; Type: TABLE DATA; Schema: public; Owner: regress_rls_alice
--

COPY public.uaccount (pguser, seclv) FROM stdin;
\.


--
-- Name: tbl1_a_seq; Type: SEQUENCE SET; Schema: public; Owner: yugabyte_test
--

SELECT pg_catalog.setval('public.tbl1_a_seq', 1, true);


--
-- Name: tbl2_a_seq; Type: SEQUENCE SET; Schema: public; Owner: yugabyte_test
--

SELECT pg_catalog.setval('public.tbl2_a_seq', 1, false);


--
-- Name: tbl8_idx; Type: INDEX; Schema: public; Owner: yugabyte_test
--

CREATE INDEX tbl8_idx ON public.tbl8 USING lsm ((b, c) HASH) SPLIT INTO 3 TABLETS;


--
-- Name: tbl8_idx2; Type: INDEX; Schema: public; Owner: yugabyte_test
--

CREATE INDEX tbl8_idx2 ON public.tbl8 USING lsm (a HASH, b ASC) SPLIT INTO 3 TABLETS;


--
-- Name: tbl8_idx3; Type: INDEX; Schema: public; Owner: yugabyte_test
--

CREATE INDEX tbl8_idx3 ON public.tbl8 USING lsm (b ASC);


--
-- Name: tbl8_idx4; Type: INDEX; Schema: public; Owner: yugabyte_test
--

CREATE INDEX tbl8_idx4 ON public.tbl8 USING lsm (b DESC);


--
-- Name: tbl8_idx5; Type: INDEX; Schema: public; Owner: yugabyte_test
--

CREATE INDEX tbl8_idx5 ON public.tbl8 USING lsm (c HASH) SPLIT INTO 3 TABLETS;


--
-- Name: uaccount account_policies; Type: POLICY; Schema: public; Owner: regress_rls_alice
--

CREATE POLICY account_policies ON public.uaccount USING ((pguser = CURRENT_USER));


--
-- Name: rls_public p1; Type: POLICY; Schema: public; Owner: yugabyte_test
--

CREATE POLICY p1 ON public.rls_public USING (((k % 2) = 0));


--
-- Name: rls_private p2; Type: POLICY; Schema: public; Owner: yugabyte_test
--

CREATE POLICY p2 ON public.rls_private FOR INSERT WITH CHECK (((k % 2) = 1));


--
-- Name: rls_private p3; Type: POLICY; Schema: public; Owner: yugabyte_test
--

CREATE POLICY p3 ON public.rls_private FOR UPDATE USING (((k % 2) = 1));


--
-- Name: rls_private; Type: ROW SECURITY; Schema: public; Owner: yugabyte_test
--

ALTER TABLE public.rls_private ENABLE ROW LEVEL SECURITY;

--
-- Name: rls_public; Type: ROW SECURITY; Schema: public; Owner: yugabyte_test
--

ALTER TABLE public.rls_public ENABLE ROW LEVEL SECURITY;

--
-- Name: uaccount; Type: ROW SECURITY; Schema: public; Owner: regress_rls_alice
--

ALTER TABLE public.uaccount ENABLE ROW LEVEL SECURITY;

--
-- Name: TABLE rls_private; Type: ACL; Schema: public; Owner: yugabyte_test
--

GRANT SELECT ON TABLE public.rls_private TO rls_user;


--
-- Name: TABLE rls_public; Type: ACL; Schema: public; Owner: yugabyte_test
--

GRANT ALL ON TABLE public.rls_public TO PUBLIC;


--
-- YSQL database dump complete
--

